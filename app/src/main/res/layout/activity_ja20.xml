<?xml version="1.0" encoding="utf-8"?>
<ScrollView

    android:id="@+id/activity_main"

    xmlns:android="http://schemas.android.com/apk/res/android"

    xmlns:tools="http://schemas.android.com/tools"

    android:layout_width="match_parent"

    android:layout_height="match_parent"
    android:background="@drawable/bgapps"
    tools:context="com.lokesh.interviewprep.HomeActivity"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <LinearLayout
        android:orientation="vertical"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <RelativeLayout
            android:layout_marginTop="10dp"
            android:layout_marginLeft="24dp"
            android:layout_marginRight="20dp"
            android:layout_width="match_parent"
            android:layout_height="wrap_content">
            <TextView
                android:text="How is inheritance in C++  different from Java?"
                android:textStyle="bold"
                android:textColor="#FFFF"
                android:textSize="30sp"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"/>

        </RelativeLayout>
        <GridLayout
            android:columnCount="1"
            android:rowCount="4"
            android:alignmentMode="alignMargins"
            android:columnOrderPreserved="false"
            android:layout_width="match_parent"
            android:layout_height="wrap_content">


            <android.support.v7.widget.CardView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_columnWeight="1"
                android:layout_rowWeight="1"
                app:cardElevation="6dp"
                app:cardCornerRadius="12dp"
                android:layout_margin="10dp">

                <LinearLayout
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:layout_gravity="center"
                    android:orientation="vertical"
                    android:padding="5dp">

                    <TextView
                        android:layout_width="wrap_content"
                        android:layout_height="wrap_content"
                        android:text="In Java, all classes inherit from the Object class directly or indirectly. Therefore, there is always a single inheritance tree of classes in Java, and Object class is root of the tree.
\nIn Java, members of the grandparent class are not directly accessible. See this G-Fact for more details.
\nThe meaning of protected member access specifier is somewhat different in Java. In Java, protected members of a class “A” are accessible in other class “B” of same package, even if B doesn’t inherit from A (they both have to be in the same package).
\nJava uses extends keyword for inheritance. Unlike C++, Java doesn’t provide an inheritance specifier like public, protected or private. Therefore, we cannot change the protection level of members of base class in Java, if some data member is public or protected in base class then it remains public or protected in derived class. Like C++, private members of base class are not accessible in derived class.
\nUnlike C++, in Java, we don’t have to remember those rules of inheritance which are combination of base class access specifier and inheritance specifier.
\nIn Java, methods are virtual by default. In C++, we explicitly use virtual keyword. See this G-Fact for more details.
\nJava uses a separate keyword interface for interfaces, and abstract keyword for abstract classes and abstract functions.
\nUnlike C++, Java doesn’t support multiple inheritance. A class cannot inherit from more than one class. A class can implement multiple interfaces though.
\nIn C++, default constructor of parent class is automatically called, but if we want to call parametrized constructor of a parent class, we must use Initializer list. Like C++, default constructor of the parent class is automatically called in Java, but if we want to call parameterized constructor then we must use super to call the parent constructor."
                        android:textSize="20sp"/>





                </LinearLayout>
            </android.support.v7.widget.CardView>



        </GridLayout>


    </LinearLayout>


</ScrollView>